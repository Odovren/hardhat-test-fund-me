{
  "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeed",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "FundMe__NotOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "funder",
          "type": "address"
        }
      ],
      "name": "getAddressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getFunder",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPriceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getVersion",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "transactionHash": "0x9aac0c9ccfa06dcd9ffcbef100cea9aa30b15b7dc4d20dd945bc74004cceb1f6",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "transactionIndex": 0,
    "gasUsed": "904213",
    "logsBloom": "0x
    "blockHash": "0xfca19630e1a3cd58b759a935411e241cda8d3320cb63a06ec380c09b0b6d4b58",
    "transactionHash": "0x9aac0c9ccfa06dcd9ffcbef100cea9aa30b15b7dc4d20dd945bc74004cceb1f6",
    "logs": [],
    "blockNumber": 2,
    "cumulativeGasUsed": "904213",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x5FbDB2315678afecb367f032d93F642f64180aa3"
  ],
  "numDeployments": 1,
  "solcInputHash": "992981e3dbd4e3a888883089037f9db9",
  "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeed\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundMe__NotOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"funder\",\"type\":\"address\"}],\"name\":\"getAddressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getFunder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getVersion\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Odovren\",\"kind\":\"dev\",\"methods\":{\"fund()\":{\"details\":\"This implements price feeds as our library\"}},\"title\":\"A contract for crowd funding\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"fund()\":{\"notice\":\"this function funds this contract\"}},\"notice\":\"This contract is to demo a sample funding contract\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  // getRoundData and latestRoundData should both raise \\\"No data present\\\"\\n  // if they do not have data to report, instead of returning unset values\\n  // which could be misinterpreted as actual reported values.\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0xf2b6c9adb3552254df1445b73563cf014434ff5e78663e9b961b6c059506ceb5\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\n// Imports\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\nimport \\\"./PriceConverter.sol\\\";\\n\\n// Error Codes\\nerror FundMe__NotOwner();\\n\\n// Contracts\\n\\n/// @title A contract for crowd funding\\n/// @author Odovren\\n/// @notice This contract is to demo a sample funding contract\\ncontract FundMe {\\n    using PriceConverter for uint256;\\n\\n    mapping(address => uint256) private s_addressToAmountFunded;\\n    address[] private s_funders;\\n    address private immutable i_owner;\\n    AggregatorV3Interface private s_priceFeed;\\n    uint256 public constant MINIMUM_USD = 50 * 10**18;\\n\\n    /// @notice Ensures that the sender is the actual owner of the contract\\n    modifier onlyOwner() {\\n        if (msg.sender != i_owner) revert FundMe__NotOwner();\\n        _;\\n    }\\n\\n    constructor(address priceFeed) {\\n        s_priceFeed = AggregatorV3Interface(priceFeed);\\n        i_owner = msg.sender;\\n    }\\n\\n    /// @notice this function funds this contract\\n    /// @dev This implements price feeds as our library\\n    function fund() public payable {\\n        uint256 minimumUSD = MINIMUM_USD;\\n        require(\\n            msg.value.getConversionRate(s_priceFeed) >= minimumUSD,\\n            \\\"You need to spend more ETH!\\\"\\n        );\\n        s_addressToAmountFunded[msg.sender] += msg.value;\\n        s_funders.push(msg.sender);\\n    }\\n\\n    function getVersion() public view returns (uint256) {\\n        return s_priceFeed.version();\\n    }\\n\\n    function withdraw() public payable onlyOwner {\\n        payable(msg.sender).transfer(address(this).balance);\\n        address[] memory funders = s_funders;\\n        // mappings can't be in memory, sorry!\\n        for (uint256 funderIndex = 0; funderIndex < funders.length; funderIndex++) {\\n            address funder = funders[funderIndex];\\n            s_addressToAmountFunded[funder] = 0;\\n        }\\n        s_funders = new address[](0);\\n    }\\n\\n    // Views\\n\\n    function getOwner() public view returns(address) {\\n        return i_owner;\\n    }\\n\\n    function getFunder(uint256 index) public view returns(address) {\\n        return s_funders[index];\\n    }\\n\\n    function getAddressToAmountFunded(address funder) public view returns(uint256) {\\n        return s_addressToAmountFunded[funder];\\n    }\\n\\n    function getPriceFeed() public view returns(AggregatorV3Interface) {\\n        return s_priceFeed;\\n    }\\n}\\n\",\"keccak256\":\"0x5eb4b41950e3513ef1885870616751adc3142721d4e07cbc3bddf76ff05f4173\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\nlibrary PriceConverter {\\n    function getPrice(AggregatorV3Interface priceFeed)\\n    internal\\n    view\\n    returns (uint256)\\n    {\\n        (, int256 answer, , , ) = priceFeed.latestRoundData();\\n        // ETH/USD rate in 18 digit\\n        return uint256(answer * 10000000000);\\n    }\\n\\n    // 1000000000\\n    function getConversionRate(uint256 ethAmount, AggregatorV3Interface priceFeed)\\n    internal\\n    view\\n    returns (uint256)\\n    {\\n        uint256 ethPrice = getPrice(priceFeed);\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1000000000000000000;\\n        // the actual ETH/USD conversation rate, after adjusting the extra 0s.\\n        return ethAmountInUsd;\\n    }\\n}\\n\",\"keccak256\":\"0x6f8db975abdc4168045933a8fbcb7c5d05e9af1e42fbe0e2cf6c6cf29968e807\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a060405234801561001057600080fd5b50604051620010593803806200105983398181016040528101906100349190610112565b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250505061013f565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100df826100b4565b9050919050565b6100ef816100d4565b81146100fa57600080fd5b50565b60008151905061010c816100e6565b92915050565b600060208284031215610128576101276100af565b5b6000610136848285016100fd565b91505092915050565b608051610ef762000162600039600081816102ab01526104f80152610ef76000f3fe60806040526004361061007b5760003560e01c8063893d20e81161004e578063893d20e81461011d5780639e87a5cd14610148578063b60d428814610173578063d7b4750c1461017d5761007b565b80630343fb25146100805780630d8e6e2c146100bd5780633ccfd60b146100e85780636b69a592146100f2575b600080fd5b34801561008c57600080fd5b506100a760048036038101906100a291906108b4565b6101ba565b6040516100b491906108fa565b60405180910390f35b3480156100c957600080fd5b506100d2610202565b6040516100df91906108fa565b60405180910390f35b6100f06102a9565b005b3480156100fe57600080fd5b506101076104e7565b60405161011491906108fa565b60405180910390f35b34801561012957600080fd5b506101326104f4565b60405161013f9190610924565b60405180910390f35b34801561015457600080fd5b5061015d61051c565b60405161016a919061099e565b60405180910390f35b61017b610546565b005b34801561018957600080fd5b506101a4600480360381019061019f91906109e5565b610686565b6040516101b19190610924565b60405180910390f35b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166354fd4d506040518163ffffffff1660e01b815260040160206040518083038186803b15801561026c57600080fd5b505afa158015610280573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102a49190610a27565b905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461032e576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f19350505050158015610374573d6000803e3d6000fd5b50600060018054806020026020016040519081016040528092919081815260200182805480156103f957602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116103af575b5050505050905060005b815181101561048357600082828151811061042157610420610a54565b5b6020026020010151905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061047b90610ab2565b915050610403565b50600067ffffffffffffffff81111561049f5761049e610afb565b5b6040519080825280602002602001820160405280156104cd5781602001602082028036833780820191505090505b50600190805190602001906104e39291906107aa565b5050565b6802b5e3af16b188000081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60006802b5e3af16b188000090508061058a600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346106ce90919063ffffffff16565b10156105cb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105c290610b87565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546106199190610ba7565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60006001828154811061069c5761069b610a54565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000806106da8361070a565b90506000670de0b6b3a764000085836106f39190610bfd565b6106fd9190610c86565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561075357600080fd5b505afa158015610767573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061078b9190610d2f565b5050509150506402540be400816107a29190610daa565b915050919050565b828054828255906000526020600020908101928215610823579160200282015b828111156108225782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906107ca565b5b5090506108309190610834565b5090565b5b8082111561084d576000816000905550600101610835565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061088182610856565b9050919050565b61089181610876565b811461089c57600080fd5b50565b6000813590506108ae81610888565b92915050565b6000602082840312156108ca576108c9610851565b5b60006108d88482850161089f565b91505092915050565b6000819050919050565b6108f4816108e1565b82525050565b600060208201905061090f60008301846108eb565b92915050565b61091e81610876565b82525050565b60006020820190506109396000830184610915565b92915050565b6000819050919050565b600061096461095f61095a84610856565b61093f565b610856565b9050919050565b600061097682610949565b9050919050565b60006109888261096b565b9050919050565b6109988161097d565b82525050565b60006020820190506109b3600083018461098f565b92915050565b6109c2816108e1565b81146109cd57600080fd5b50565b6000813590506109df816109b9565b92915050565b6000602082840312156109fb576109fa610851565b5b6000610a09848285016109d0565b91505092915050565b600081519050610a21816109b9565b92915050565b600060208284031215610a3d57610a3c610851565b5b6000610a4b84828501610a12565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610abd826108e1565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610af057610aef610a83565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600082825260208201905092915050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610b71601b83610b2a565b9150610b7c82610b3b565b602082019050919050565b60006020820190508181036000830152610ba081610b64565b9050919050565b6000610bb2826108e1565b9150610bbd836108e1565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610bf257610bf1610a83565b5b828201905092915050565b6000610c08826108e1565b9150610c13836108e1565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610c4c57610c4b610a83565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610c91826108e1565b9150610c9c836108e1565b925082610cac57610cab610c57565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610cd681610cb7565b8114610ce157600080fd5b50565b600081519050610cf381610ccd565b92915050565b6000819050919050565b610d0c81610cf9565b8114610d1757600080fd5b50565b600081519050610d2981610d03565b92915050565b600080600080600060a08688031215610d4b57610d4a610851565b5b6000610d5988828901610ce4565b9550506020610d6a88828901610d1a565b9450506040610d7b88828901610a12565b9350506060610d8c88828901610a12565b9250506080610d9d88828901610ce4565b9150509295509295909350565b6000610db582610cf9565b9150610dc083610cf9565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610dff57610dfe610a83565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610e3c57610e3b610a83565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610e7957610e78610a83565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610eb657610eb5610a83565b5b82820290509291505056fea2646970667358221220784e407e507818b439cc0ee91839197dc9e3c92fd1a5f6bbf5d393a05f6e4de164736f6c63430008090033",
  "deployedBytecode": "0x60806040526004361061007b5760003560e01c8063893d20e81161004e578063893d20e81461011d5780639e87a5cd14610148578063b60d428814610173578063d7b4750c1461017d5761007b565b80630343fb25146100805780630d8e6e2c146100bd5780633ccfd60b146100e85780636b69a592146100f2575b600080fd5b34801561008c57600080fd5b506100a760048036038101906100a291906108b4565b6101ba565b6040516100b491906108fa565b60405180910390f35b3480156100c957600080fd5b506100d2610202565b6040516100df91906108fa565b60405180910390f35b6100f06102a9565b005b3480156100fe57600080fd5b506101076104e7565b60405161011491906108fa565b60405180910390f35b34801561012957600080fd5b506101326104f4565b60405161013f9190610924565b60405180910390f35b34801561015457600080fd5b5061015d61051c565b60405161016a919061099e565b60405180910390f35b61017b610546565b005b34801561018957600080fd5b506101a4600480360381019061019f91906109e5565b610686565b6040516101b19190610924565b60405180910390f35b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166354fd4d506040518163ffffffff1660e01b815260040160206040518083038186803b15801561026c57600080fd5b505afa158015610280573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102a49190610a27565b905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461032e576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f19350505050158015610374573d6000803e3d6000fd5b50600060018054806020026020016040519081016040528092919081815260200182805480156103f957602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116103af575b5050505050905060005b815181101561048357600082828151811061042157610420610a54565b5b6020026020010151905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061047b90610ab2565b915050610403565b50600067ffffffffffffffff81111561049f5761049e610afb565b5b6040519080825280602002602001820160405280156104cd5781602001602082028036833780820191505090505b50600190805190602001906104e39291906107aa565b5050565b6802b5e3af16b188000081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60006802b5e3af16b188000090508061058a600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346106ce90919063ffffffff16565b10156105cb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105c290610b87565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546106199190610ba7565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60006001828154811061069c5761069b610a54565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000806106da8361070a565b90506000670de0b6b3a764000085836106f39190610bfd565b6106fd9190610c86565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561075357600080fd5b505afa158015610767573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061078b9190610d2f565b5050509150506402540be400816107a29190610daa565b915050919050565b828054828255906000526020600020908101928215610823579160200282015b828111156108225782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906107ca565b5b5090506108309190610834565b5090565b5b8082111561084d576000816000905550600101610835565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061088182610856565b9050919050565b61089181610876565b811461089c57600080fd5b50565b6000813590506108ae81610888565b92915050565b6000602082840312156108ca576108c9610851565b5b60006108d88482850161089f565b91505092915050565b6000819050919050565b6108f4816108e1565b82525050565b600060208201905061090f60008301846108eb565b92915050565b61091e81610876565b82525050565b60006020820190506109396000830184610915565b92915050565b6000819050919050565b600061096461095f61095a84610856565b61093f565b610856565b9050919050565b600061097682610949565b9050919050565b60006109888261096b565b9050919050565b6109988161097d565b82525050565b60006020820190506109b3600083018461098f565b92915050565b6109c2816108e1565b81146109cd57600080fd5b50565b6000813590506109df816109b9565b92915050565b6000602082840312156109fb576109fa610851565b5b6000610a09848285016109d0565b91505092915050565b600081519050610a21816109b9565b92915050565b600060208284031215610a3d57610a3c610851565b5b6000610a4b84828501610a12565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610abd826108e1565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610af057610aef610a83565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600082825260208201905092915050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610b71601b83610b2a565b9150610b7c82610b3b565b602082019050919050565b60006020820190508181036000830152610ba081610b64565b9050919050565b6000610bb2826108e1565b9150610bbd836108e1565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610bf257610bf1610a83565b5b828201905092915050565b6000610c08826108e1565b9150610c13836108e1565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610c4c57610c4b610a83565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610c91826108e1565b9150610c9c836108e1565b925082610cac57610cab610c57565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610cd681610cb7565b8114610ce157600080fd5b50565b600081519050610cf381610ccd565b92915050565b6000819050919050565b610d0c81610cf9565b8114610d1757600080fd5b50565b600081519050610d2981610d03565b92915050565b600080600080600060a08688031215610d4b57610d4a610851565b5b6000610d5988828901610ce4565b9550506020610d6a88828901610d1a565b9450506040610d7b88828901610a12565b9350506060610d8c88828901610a12565b9250506080610d9d88828901610ce4565b9150509295509295909350565b6000610db582610cf9565b9150610dc083610cf9565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610dff57610dfe610a83565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610e3c57610e3b610a83565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610e7957610e78610a83565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610eb657610eb5610a83565b5b82820290509291505056fea2646970667358221220784e407e507818b439cc0ee91839197dc9e3c92fd1a5f6bbf5d393a05f6e4de164736f6c63430008090033",
  "devdoc": {
    "author": "Odovren",
    "kind": "dev",
    "methods": {
      "fund()": {
        "details": "This implements price feeds as our library"
      }
    },
    "title": "A contract for crowd funding",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "fund()": {
        "notice": "this function funds this contract"
      }
    },
    "notice": "This contract is to demo a sample funding contract",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 59,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_addressToAmountFunded",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 62,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_funders",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 67,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_priceFeed",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}